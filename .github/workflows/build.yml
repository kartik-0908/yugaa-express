name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change this to your main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/yugaa-express:latest
    - name: Debug environment
      run: |
        echo "Listing all env variables (names only):"
        env | cut -d= -f1
        echo "Checking for YOUR_API_KEY:"
        env | grep YOUR_API_KEY || echo "YOUR_API_KEY is not set"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: SSH to EC2 and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
           echo "Starting deployment..."
           sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/yugaa-express:latest
           echo "Docker image pulled"
           sudo docker stop yugaa-express || true
           echo "Stopped existing container if it existed"
           sudo docker rm yugaa-express || true
           echo "Removed existing container if it existed"
           sudo docker run -d --name yugaa-express -p 3001:3001 \
           -e hi=fromhi \
           -e hi_env=fromhi_env \
           -e SHOPIFY_SECRET_KEY="${{ secrets.SHOPIFY_SECRET_KEY }}" \
           -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
           -e CLERK_WEBHOOK_SECRET_KEY="${{ secrets.CLERK_WEBHOOK_SECRET_KEY }}" \
           -e CLERK_PUBLISHABLE_KEY="${{ secrets.CLERK_PUBLISHABLE_KEY }}" \
           -e CLERK_SECRET_KEY="${{ secrets.CLERK_SECRET_KEY }}" \
           -e SHOPIFY_KEY="${{ secrets.SHOPIFY_KEY }}" \
           -e LANGCHAIN_TRACING_V2="${{ secrets.LANGCHAIN_TRACING_V2 }}" \
           -e LANGCHAIN_ENDPOINT="${{ secrets.LANGCHAIN_ENDPOINT }}" \
           -e LANGCHAIN_API_KEY="${{ secrets.LANGCHAIN_API_KEY }}" \
           -e LANGCHAIN_PROJECT="${{ secrets.LANGCHAIN_PROJECT }}" \
           -e LANGCHAIN_CALLBACKS_BACKGROUND="${{ secrets.LANGCHAIN_CALLBACKS_BACKGROUND }}" \
           -e PROJECT_ID="${{ secrets.PROJECT_ID }}" \
           -e CLIENT_EMAIL="${{ secrets.CLIENT_EMAIL }}" \
           -e PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" \
           -e LOGO_BUCKET_NAME="${{ secrets.LOGO_BUCKET_NAME }}" \
           -e FILES_BUCKET_NAME="${{ secrets.FILES_BUCKET_NAME }}" \
           -e MONGODB_ATLAS_URI="${{ secrets.MONGODB_ATLAS_URI }}" \
           -e MONGO_DB_NAME="${{ secrets.MONGO_DB_NAME }}" \
           -e MONGO_DB_COLLECTION="${{ secrets.MONGO_DB_COLLECTION }}" \
           -e AZURE_OPENAI_API_KEY="${{ secrets.AZURE_OPENAI_API_KEY }}" \
           -e AZURE_OPENAI_API_EMBEDDING_DEPLOYMENT_NAME="${{ secrets.AZURE_OPENAI_API_EMBEDDING_DEPLOYMENT_NAME }}" \
           -e AZURE_OPENAI_API_INSTANCE_NAME="${{ secrets.AZURE_OPENAI_API_INSTANCE_NAME }}" \
           -e AZURE_OPENAI_API_VERSION="${{ secrets.AZURE_OPENAI_API_VERSION }}" \
           -e AZURE_OPENAI_API_CHAT_DEPLOYMENT_NAME="${{ secrets.AZURE_OPENAI_API_CHAT_DEPLOYMENT_NAME }}" \
           -e AZURE_OPENAI_API_CHAT_VERSION="${{ secrets.AZURE_OPENAI_API_CHAT_VERSION }}" \
           -e SENDGRID_API_KEY="${{ secrets.SENDGRID_API_KEY }}" \
           -e SQLITE_URL="${{ secrets.SQLITE_URL }}" \
           ${{ secrets.DOCKER_HUB_USERNAME }}/yugaa-express:latest