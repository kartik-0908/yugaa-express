model AIEscalatedTicket {
  id                     String                   @id @default(uuid())
  shopDomain             String
  customerEmail          String
  aiConversationTicketId String
  status                 String                   @default("unassigned")
  priority               String?
  category               String?
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  subject                String                   @default("Subject")
  fcr                    Boolean                  @default(false)
  fcrBy                  String?
  assignedToId           String?                  @unique
  assignedTo             User?                    @relation(fields: [assignedToId], references: [id])
  aiConversationTicket   AIConversationTicket     @relation(fields: [aiConversationTicketId], references: [id])
  events                 AIEscalatedTicketEvent[]
}

model AIEscalatedTicketEvent {
  id                  String            @id @default(uuid())
  aiEscalatedTicketId String
  changedBy           String?
  oldStatus           String?
  newStatus           String?
  assignedTo          String?
  assignedBy          String?
  newPriority         String?
  newCategory         String?
  emailId             String?
  createdAt           DateTime          @default(now())
  type                EventType
  aiEscalatedTicket   AIEscalatedTicket @relation(fields: [aiEscalatedTicketId], references: [id])
  email               Email?            @relation(fields: [emailId], references: [id])
}

model Email {
  id        String                   @id @default(uuid())
  createdAt DateTime                 @default(now())
  from      String
  subject   String
  text      String
  to        String
  events    AIEscalatedTicketEvent[]
}

enum EventType {
  EMAIL_RECEIVED
  EMAIL_SENT
  STATUS_CHANGED
  PRIORITY_CHANGED
  CATEGORY_CHANGED
  ASSIGNED
  REOPENED
  CREATED
}
