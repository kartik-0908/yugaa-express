model User {
  id                   String    @id @default(uuid())
  email                String    @unique
  firstName            String?
  lastName             String?
  lastLoginAt          DateTime?
  shopDomain           String?
  image                String?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime? @updatedAt
  role                 String?
  emailVerified        DateTime?
  currentActiveTickets Int       @default(0)
  availabe             Boolean   @default(true)
  unavailableTill      DateTime  @default(now())
 notificationsSent    NotificationSent[]

}

model NotificationSent {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  sentAt    DateTime @default(now())

  @@index([userId])
}

model InvitedUser {
  id                String   @id @default(uuid())
  email             String   @unique
  role              String
  shopDomain        String
  invitationToken   String   @unique
  invitationSentAt  DateTime @default(now())
  invitationExpires DateTime
  verified          Boolean  @default(false)

  @@unique([shopDomain, email])
}

model ShopifyInstalledShop {
  id               String   @id @default(uuid())
  shop             String   @unique
  accessToken      String?
  adminInviteCode  String   @default(uuid())
  memberInviteCode String   @default(uuid())
  email            String[]
  autoAssignment   Boolean  @default(true)
}

model Customer {
  id         String  @id @default(uuid())
  shopDomain String
  firstName  String
  lastName   String
  email      String
  deleted    Boolean @default(false)

  @@unique([shopDomain, email])
}
